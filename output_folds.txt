====================================================
******************* SCALE SIM **********************
====================================================
Array Size: 	8x8
SRAM IFMAP (kB): 	256
SRAM Filter (kB): 	256
SRAM OFMAP (kB): 	256
Dataflow: 	Weight Stationary
CSV file path: 	topologies/sparsity/conv.csv
Bandwidth: 	50
Working in USE USER BANDWIDTH mode.
====================================================

Running Layer 0
filter matrix start
[[100 127 154 181 208 235]
 [101 128 155 182 209 236]
 [102 129 156 183 210 237]
 [103 130 157 184 211 238]
 [104 131 158 185 212 239]
 [105 132 159 186 213 240]
 [106 133 160 187 214 241]
 [107 134 161 188 215 242]
 [108 135 162 189 216 243]
 [109 136 163 190 217 244]
 [110 137 164 191 218 245]
 [111 138 165 192 219 246]
 [112 139 166 193 220 247]
 [113 140 167 194 221 248]
 [114 141 168 195 222 249]
 [115 142 169 196 223 250]
 [116 143 170 197 224 251]
 [117 144 171 198 225 252]
 [118 145 172 199 226 253]
 [119 146 173 200 227 254]
 [120 147 174 201 228 255]
 [121 148 175 202 229 256]
 [122 149 176 203 230 257]
 [123 150 177 204 231 258]
 [124 151 178 205 232 259]
 [125 152 179 206 233 260]
 [126 153 180 207 234 261]]
(27, 6)
filter matrix after multiplying
[[100 127 154 181 208 235]
 [101 128 155   0   0   0]
 [  0   0   0   0   0   0]
 [  0   0   0   0   0   0]
 [104 131 158 185 212 239]
 [105 132 159   0   0   0]
 [  0   0   0   0   0   0]
 [  0   0   0   0   0   0]
 [108 135 162 189 216 243]
 [109 136 163   0   0   0]
 [  0   0   0   0   0   0]
 [  0   0   0   0   0   0]
 [112 139 166 193 220 247]
 [113 140 167   0   0   0]
 [  0   0   0   0   0   0]
 [  0   0   0   0   0   0]
 [116 143 170 197 224 251]
 [117 144 171   0   0   0]
 [  0   0   0   0   0   0]
 [  0   0   0   0   0   0]
 [120 147 174 201 228 255]
 [121 148 175   0   0   0]
 [  0   0   0   0   0   0]
 [  0   0   0   0   0   0]
 [124 151 178 205 232 259]
 [125 152 179   0   0   0]
 [  0   0   0   0   0   0]]
self.filter_addr_matrix after padding
[[100 127 154 181 208 235]
 [101 128 155   0   0   0]
 [  0   0   0   0   0   0]
 [  0   0   0   0   0   0]
 [104 131 158 185 212 239]
 [105 132 159   0   0   0]
 [  0   0   0   0   0   0]
 [  0   0   0   0   0   0]
 [108 135 162 189 216 243]
 [109 136 163   0   0   0]
 [  0   0   0   0   0   0]
 [  0   0   0   0   0   0]
 [112 139 166 193 220 247]
 [113 140 167   0   0   0]
 [  0   0   0   0   0   0]
 [  0   0   0   0   0   0]
 [116 143 170 197 224 251]
 [117 144 171   0   0   0]
 [  0   0   0   0   0   0]
 [  0   0   0   0   0   0]
 [120 147 174 201 228 255]
 [121 148 175   0   0   0]
 [  0   0   0   0   0   0]
 [  0   0   0   0   0   0]
 [124 151 178 205 232 259]
 [125 152 179   0   0   0]
 [  0   0   0   0   0   0]
 [  0   0   0   0   0   0]
 [  0   0   0   0   0   0]
 [  0   0   0   0   0   0]
 [  0   0   0   0   0   0]
 [  0   0   0   0   0   0]]
[[100 127 154 181 208 235]
 [101 128 155  -1  -1  -1]
 [104 131 158 185 212 239]
 [105 132 159  -1  -1  -1]
 [108 135 162 189 216 243]
 [109 136 163  -1  -1  -1]
 [112 139 166 193 220 247]
 [113 140 167  -1  -1  -1]
 [116 143 170 197 224 251]
 [117 144 171  -1  -1  -1]
 [120 147 174 201 228 255]
 [121 148 175  -1  -1  -1]
 [124 151 178 205 232 259]
 [125 152 179  -1  -1  -1]
 [ -1  -1  -1  -1  -1  -1]
 [ -1  -1  -1  -1  -1  -1]]
(16, 6)
IFMAP function
[[ 0  1  2  3  4  5  6  7  8 15 16 17 18 19 20 21 22 23 30 31 32 33 34 35 36 37 38]
 [ 3  4  5  6  7  8  9 10 11 18 19 20 21 22 23 24 25 26 33 34 35 36 37 38 39 40 41]
 [ 6  7  8  9 10 11 12 13 14 21 22 23 24 25 26 27 28 29 36 37 38 39 40 41 42 43 44]
 [15 16 17 18 19 20 21 22 23 30 31 32 33 34 35 36 37 38 45 46 47 48 49 50 51 52 53]
 [18 19 20 21 22 23 24 25 26 33 34 35 36 37 38 39 40 41 48 49 50 51 52 53 54 55 56]
 [21 22 23 24 25 26 27 28 29 36 37 38 39 40 41 42 43 44 51 52 53 54 55 56 57 58 59]
 [30 31 32 33 34 35 36 37 38 45 46 47 48 49 50 51 52 53 60 61 62 63 64 65 66 67 68]
 [33 34 35 36 37 38 39 40 41 48 49 50 51 52 53 54 55 56 63 64 65 66 67 68 69 70 71]
 [36 37 38 39 40 41 42 43 44 51 52 53 54 55 56 57 58 59 66 67 68 69 70 71 72 73 74]]
(9, 27)
[[1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0]
 [1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0]
 [1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0]
 [1 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 1 0 0]
 [1 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 1 0 0]
 [1 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 1 0 0]]
[[ 0  1  2  3  4  5  6  7  8 15 16 17 18 19 20 21]
 [ 3  4  5  6  7  8  9 10 11 18 19 20 21 22 23 24]
 [ 6  7  8  9 10 11 12 13 14 21 22 23 24 25 26 27]
 [15 16 17 18 19 20 21 22 23 30 31 32 33 34 35 36]
 [18 19 20 21 22 23 24 25 26 33 34 35 36 37 38 39]
 [21 22 23 24 25 26 27 28 29 36 37 38 39 40 41 42]
 [30 31 32 33 34 35 36 37 38 45 46 47 48 49 50 51]
 [33 34 35 36 37 38 39 40 41 48 49 50 51 52 53 54]
 [36 37 38 39 40 41 42 43 44 51 52 53 54 55 56 57]]
(9, 16)
########## IFMAP demand matrix ##########
>one
[[ 0  1  2  3  4  5  6  7]
 [ 3  4  5  6  7  8  9 10]
 [ 6  7  8  9 10 11 12 13]
 [15 16 17 18 19 20 21 22]
 [18 19 20 21 22 23 24 25]
 [21 22 23 24 25 26 27 28]
 [30 31 32 33 34 35 36 37]
 [33 34 35 36 37 38 39 40]
 [36 37 38 39 40 41 42 43]]
>two
[[ 0  1  2  3  4  5  6  7]
 [ 3  4  5  6  7  8  9 10]
 [ 6  7  8  9 10 11 12 13]
 [15 16 17 18 19 20 21 22]
 [18 19 20 21 22 23 24 25]
 [21 22 23 24 25 26 27 28]
 [30 31 32 33 34 35 36 37]
 [33 34 35 36 37 38 39 40]
 [36 37 38 39 40 41 42 43]]
>three
[[-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [ 0.  1.  2.  3.  4.  5.  6.  7.]
 [ 3.  4.  5.  6.  7.  8.  9. 10.]
 [ 6.  7.  8.  9. 10. 11. 12. 13.]
 [15. 16. 17. 18. 19. 20. 21. 22.]
 [18. 19. 20. 21. 22. 23. 24. 25.]
 [21. 22. 23. 24. 25. 26. 27. 28.]
 [30. 31. 32. 33. 34. 35. 36. 37.]
 [33. 34. 35. 36. 37. 38. 39. 40.]
 [36. 37. 38. 39. 40. 41. 42. 43.]]
>four
[[-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [ 0.  1.  2.  3.  4.  5.  6.  7.]
 [ 3.  4.  5.  6.  7.  8.  9. 10.]
 [ 6.  7.  8.  9. 10. 11. 12. 13.]
 [15. 16. 17. 18. 19. 20. 21. 22.]
 [18. 19. 20. 21. 22. 23. 24. 25.]
 [21. 22. 23. 24. 25. 26. 27. 28.]
 [30. 31. 32. 33. 34. 35. 36. 37.]
 [33. 34. 35. 36. 37. 38. 39. 40.]
 [36. 37. 38. 39. 40. 41. 42. 43.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]]
>five
[[-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]

[ [0,1,2,3,4,5,6,7]. -1. -1. -1. -1. -1. -1. -1.]

 [ 0. -1. -1. -1. -1. -1. -1. -1.]
 [ 1. -1. -1. -1. -1. -1. -1. -1.]
 [ 2. -1. -1. -1. -1. -1. -1. -1.]
 [ 3. -1. -1. -1. -1. -1. -1. -1.]
 [ 4. -1. -1. -1. -1. -1. -1. -1.]
 [ 5. -1. -1. -1. -1. -1. -1. -1.]
 [ 6. -1. -1. -1. -1. -1. -1. -1.]
 [ 7. -1. -1. -1. -1. -1. -1. -1.]

 [ 3.  0. -1. -1. -1. -1. -1. -1.]
 [ 4.  1. -1. -1. -1. -1. -1. -1.]
 [ 5.  2. -1. -1. -1. -1. -1. -1.]


 [ 0. -1. -1. -1. -1. -1. -1. -1.]
 [ 3.  1. -1. -1. -1. -1. -1. -1.]
 [ 6.  4.  2. -1. -1. -1. -1. -1.]
 [15.  7.  5.  3. -1. -1. -1. -1.]
 [18. 16.  8.  6.  4. -1. -1. -1.]
 [21. 19. 17.  9.  7.  5. -1. -1.]
 [30. 22. 20. 18. 10.  8.  6. -1.]
 [33. 31. 23. 21. 19. 11.  9.  7.]
 [36. 34. 32. 24. 22. 20. 12. 10.]
 [-1. 37. 35. 33. 25. 23. 21. 13.]
 [-1. -1. 38. 36. 34. 26. 24. 22.]
 [-1. -1. -1. 39. 37. 35. 27. 25.]
 [-1. -1. -1. -1. 40. 38. 36. 28.]
 [-1. -1. -1. -1. -1. 41. 39. 37.]
 [-1. -1. -1. -1. -1. -1. 42. 40.]
 [-1. -1. -1. -1. -1. -1. -1. 43.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]]
>one
[[ 8 15 16 17 18 19 20 21]
 [11 18 19 20 21 22 23 24]
 [14 21 22 23 24 25 26 27]
 [23 30 31 32 33 34 35 36]
 [26 33 34 35 36 37 38 39]
 [29 36 37 38 39 40 41 42]
 [38 45 46 47 48 49 50 51]
 [41 48 49 50 51 52 53 54]
 [44 51 52 53 54 55 56 57]]
>two
[[ 8 15 16 17 18 19 20 21]
 [11 18 19 20 21 22 23 24]
 [14 21 22 23 24 25 26 27]
 [23 30 31 32 33 34 35 36]
 [26 33 34 35 36 37 38 39]
 [29 36 37 38 39 40 41 42]
 [38 45 46 47 48 49 50 51]
 [41 48 49 50 51 52 53 54]
 [44 51 52 53 54 55 56 57]]
>three
[[-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [ 8. 15. 16. 17. 18. 19. 20. 21.]
 [11. 18. 19. 20. 21. 22. 23. 24.]
 [14. 21. 22. 23. 24. 25. 26. 27.]
 [23. 30. 31. 32. 33. 34. 35. 36.]
 [26. 33. 34. 35. 36. 37. 38. 39.]
 [29. 36. 37. 38. 39. 40. 41. 42.]
 [38. 45. 46. 47. 48. 49. 50. 51.]
 [41. 48. 49. 50. 51. 52. 53. 54.]
 [44. 51. 52. 53. 54. 55. 56. 57.]]
>four
[[-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [ 8. 15. 16. 17. 18. 19. 20. 21.]
 [11. 18. 19. 20. 21. 22. 23. 24.]
 [14. 21. 22. 23. 24. 25. 26. 27.]
 [23. 30. 31. 32. 33. 34. 35. 36.]
 [26. 33. 34. 35. 36. 37. 38. 39.]
 [29. 36. 37. 38. 39. 40. 41. 42.]
 [38. 45. 46. 47. 48. 49. 50. 51.]
 [41. 48. 49. 50. 51. 52. 53. 54.]
 [44. 51. 52. 53. 54. 55. 56. 57.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]]
>five
[[-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [ 8. -1. -1. -1. -1. -1. -1. -1.]
 [11. 15. -1. -1. -1. -1. -1. -1.]
 [14. 18. 16. -1. -1. -1. -1. -1.]
 [23. 21. 19. 17. -1. -1. -1. -1.]
 [26. 30. 22. 20. 18. -1. -1. -1.]
 [29. 33. 31. 23. 21. 19. -1. -1.]
 [38. 36. 34. 32. 24. 22. 20. -1.]
 [41. 45. 37. 35. 33. 25. 23. 21.]
 [44. 48. 46. 38. 36. 34. 26. 24.]
 [-1. 51. 49. 47. 39. 37. 35. 27.]
 [-1. -1. 52. 50. 48. 40. 38. 36.]
 [-1. -1. -1. 53. 51. 49. 41. 39.]
 [-1. -1. -1. -1. 54. 52. 50. 42.]
 [-1. -1. -1. -1. -1. 55. 53. 51.]
 [-1. -1. -1. -1. -1. -1. 56. 54.]
 [-1. -1. -1. -1. -1. -1. -1. 57.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]]
this_fold_demand
[[100. 127. 154. 181. 208. 235.  -1.  -1.]
 [101. 128. 155.  -1.  -1.  -1.  -1.  -1.]
 [104. 131. 158. 185. 212. 239.  -1.  -1.]
 [105. 132. 159.  -1.  -1.  -1.  -1.  -1.]
 [108. 135. 162. 189. 216. 243.  -1.  -1.]
 [109. 136. 163.  -1.  -1.  -1.  -1.  -1.]
 [112. 139. 166. 193. 220. 247.  -1.  -1.]
 [113. 140. 167.  -1.  -1.  -1.  -1.  -1.]]
this_fold_demand
[[116. 143. 170. 197. 224. 251.  -1.  -1.]
 [117. 144. 171.  -1.  -1.  -1.  -1.  -1.]
 [120. 147. 174. 201. 228. 255.  -1.  -1.]
 [121. 148. 175.  -1.  -1.  -1.  -1.  -1.]
 [124. 151. 178. 205. 232. 259.  -1.  -1.]
 [125. 152. 179.  -1.  -1.  -1.  -1.  -1.]
 [ -1.  -1.  -1.  -1.  -1.  -1.  -1.  -1.]
 [ -1.  -1.  -1.  -1.  -1.  -1.  -1.  -1.]]
Compute cycles: 61
Stall cycles: 0
Overall utilization: 37.35%
Mapping efficiency: 49.22%
Average IFMAP SRAM BW: 3.148 words/cycle
Average Filter SRAM BW: 1.574 words/cycle
Average Filter Metadata SRAM BW: 0.098 words/cycle
Average OFMAP SRAM BW: 1.770 words/cycle
Average IFMAP DRAM BW: 50.000 words/cycle
Average Filter DRAM BW: 50.000 words/cycle
Average OFMAP DRAM BW: 36.000 words/cycle
************ SCALE SIM Run Complete ****************
