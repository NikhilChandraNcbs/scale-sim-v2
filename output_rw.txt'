====================================================
******************* SCALE SIM **********************
====================================================
Array Size: 	8x8
SRAM IFMAP (kB): 	256
SRAM Filter (kB): 	256
SRAM OFMAP (kB): 	256
Dataflow: 	Weight Stationary
CSV file path: 	topologies/sparsity/conv.csv
Bandwidth: 	50
Working in USE USER BANDWIDTH mode.
====================================================

Running Layer 0
filter matrix start
[[100 118 136 154 172 190]
 [101 119 137 155 173 191]
 [102 120 138 156 174 192]
 [103 121 139 157 175 193]
 [104 122 140 158 176 194]
 [105 123 141 159 177 195]
 [106 124 142 160 178 196]
 [107 125 143 161 179 197]
 [108 126 144 162 180 198]
 [109 127 145 163 181 199]
 [110 128 146 164 182 200]
 [111 129 147 165 183 201]
 [112 130 148 166 184 202]
 [113 131 149 167 185 203]
 [114 132 150 168 186 204]
 [115 133 151 169 187 205]
 [116 134 152 170 188 206]
 [117 135 153 171 189 207]]
(18, 6)
filter matrix after multiplying
[[100 118 136 154 172 190]
 [101   0   0 155 173   0]
 [  0   0   0   0   0   0]
 [  0   0   0   0   0   0]
 [104 122 140 158 176 194]
 [105   0   0 159 177   0]
 [  0   0   0   0   0   0]
 [  0   0   0   0   0   0]
 [108 126 144 162 180 198]
 [109   0   0 163 181   0]
 [  0   0   0   0   0   0]
 [  0   0   0   0   0   0]
 [112 130 148 166 184 202]
 [113   0   0 167 185   0]
 [  0   0   0   0   0   0]
 [  0   0   0   0   0   0]
 [116 134 152 170 188 206]
 [117   0   0 171 189   0]]
self.filter_addr_matrix after padding
[[100 118 136 154 172 190]
 [101   0   0 155 173   0]
 [  0   0   0   0   0   0]
 [  0   0   0   0   0   0]
 [104 122 140 158 176 194]
 [105   0   0 159 177   0]
 [  0   0   0   0   0   0]
 [  0   0   0   0   0   0]
 [108 126 144 162 180 198]
 [109   0   0 163 181   0]
 [  0   0   0   0   0   0]
 [  0   0   0   0   0   0]
 [112 130 148 166 184 202]
 [113   0   0 167 185   0]
 [  0   0   0   0   0   0]
 [  0   0   0   0   0   0]
 [116 134 152 170 188 206]
 [117   0   0 171 189   0]
 [  0   0   0   0   0   0]
 [  0   0   0   0   0   0]
 [  0   0   0   0   0   0]
 [  0   0   0   0   0   0]
 [  0   0   0   0   0   0]
 [  0   0   0   0   0   0]]
self.filter_addr_matrix
[[100 118 136 154 172 190]
 [101  -1  -1 155 173  -1]
 [104 122 140 158 176 194]
 [105  -1  -1 159 177  -1]
 [108 126 144 162 180 198]
 [109  -1  -1 163 181  -1]
 [112 130 148 166 184 202]
 [113  -1  -1 167 185  -1]
 [116 134 152 170 188 206]
 [117  -1  -1 171 189  -1]
 [ -1  -1  -1  -1  -1  -1]
 [ -1  -1  -1  -1  -1  -1]]
(12, 6)
IFMAP function
[[ 0  1  2  3  4  5 10 11 12 13 14 15 20 21 22 23 24 25]
 [ 2  3  4  5  6  7 12 13 14 15 16 17 22 23 24 25 26 27]
 [ 4  5  6  7  8  9 14 15 16 17 18 19 24 25 26 27 28 29]
 [10 11 12 13 14 15 20 21 22 23 24 25 30 31 32 33 34 35]
 [12 13 14 15 16 17 22 23 24 25 26 27 32 33 34 35 36 37]
 [14 15 16 17 18 19 24 25 26 27 28 29 34 35 36 37 38 39]
 [20 21 22 23 24 25 30 31 32 33 34 35 40 41 42 43 44 45]
 [22 23 24 25 26 27 32 33 34 35 36 37 42 43 44 45 46 47]
 [24 25 26 27 28 29 34 35 36 37 38 39 44 45 46 47 48 49]]
(9, 18)
IFMAP function final
[[ 0  1  2  3  4  5 10 11 12 13 14 15 20 21 22 23 24 25]
 [ 2  3  4  5  6  7 12 13 14 15 16 17 22 23 24 25 26 27]
 [ 4  5  6  7  8  9 14 15 16 17 18 19 24 25 26 27 28 29]
 [10 11 12 13 14 15 20 21 22 23 24 25 30 31 32 33 34 35]
 [12 13 14 15 16 17 22 23 24 25 26 27 32 33 34 35 36 37]
 [14 15 16 17 18 19 24 25 26 27 28 29 34 35 36 37 38 39]
 [20 21 22 23 24 25 30 31 32 33 34 35 40 41 42 43 44 45]
 [22 23 24 25 26 27 32 33 34 35 36 37 42 43 44 45 46 47]
 [24 25 26 27 28 29 34 35 36 37 38 39 44 45 46 47 48 49]]
(9, 18)
self.ofmap_addr_matrix
[[200 201 202 203 204 205]
 [206 207 208 209 210 211]
 [212 213 214 215 216 217]
 [218 219 220 221 222 223]
 [224 225 226 227 228 229]
 [230 231 232 233 234 235]
 [236 237 238 239 240 241]
 [242 243 244 245 246 247]
 [248 249 250 251 252 253]]
(9, 6)
self.Sr, self.Sc, self.T
18 6 9
9 8
9 8
self.ifmap_demand_matrix final
(8, 32)
(7, 32)
[[-1. -1. -1. ... -1. -1. -1.]
 [-1. -1. -1. ... -1. -1. -1.]
 [-1. -1. -1. ... -1. -1. -1.]
 ...
 [-1. -1. -1. ... -1. -1. -1.]
 [-1. -1. -1. ... -1. -1. -1.]
 [-1. -1. -1. ... -1. -1. -1.]]
self.ifmap_demand_matrix final end
inter_fold_gap_suffix, inter_fold_gap_suffix_mat 23 [[-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]]
0 = 8 -( 8 - 0 )
this_fold_demand before
self.filter_op_mat.shape =  (12, 6)
row_delta, col_delta 0 2
[[100 118 136 154 172 190]
 [101  -1  -1 155 173  -1]
 [104 122 140 158 176 194]
 [105  -1  -1 159 177  -1]
 [108 126 144 162 180 198]
 [109  -1  -1 163 181  -1]
 [112 130 148 166 184 202]
 [113  -1  -1 167 185  -1]]
this_fold_demand
[[100. 118. 136. 154. 172. 190.  -1.  -1.]
 [101.  -1.  -1. 155. 173.  -1.  -1.  -1.]
 [104. 122. 140. 158. 176. 194.  -1.  -1.]
 [105.  -1.  -1. 159. 177.  -1.  -1.  -1.]
 [108. 126. 144. 162. 180. 198.  -1.  -1.]
 [109.  -1.  -1. 163. 181.  -1.  -1.  -1.]
 [112. 130. 148. 166. 184. 202.  -1.  -1.]
 [113.  -1.  -1. 167. 185.  -1.  -1.  -1.]]
4 = 8 -( 12 - 8 )
this_fold_demand before
self.filter_op_mat.shape =  (12, 6)
row_delta, col_delta 4 2
[[116 134 152 170 188 206]
 [117  -1  -1 171 189  -1]
 [ -1  -1  -1  -1  -1  -1]
 [ -1  -1  -1  -1  -1  -1]]
this_fold_demand
[[116. 134. 152. 170. 188. 206.  -1.  -1.]
 [117.  -1.  -1. 171. 189.  -1.  -1.  -1.]
 [ -1.  -1.  -1.  -1.  -1.  -1.  -1.  -1.]
 [ -1.  -1.  -1.  -1.  -1.  -1.  -1.  -1.]
 [ -1.  -1.  -1.  -1.  -1.  -1.  -1.  -1.]
 [ -1.  -1.  -1.  -1.  -1.  -1.  -1.  -1.]
 [ -1.  -1.  -1.  -1.  -1.  -1.  -1.  -1.]
 [ -1.  -1.  -1.  -1.  -1.  -1.  -1.  -1.]]
(62, 32)
(62, 8)
self.filter_demand_matrix final
[[113.  -1.  -1. 167. 185.  -1.  -1.  -1.]
 [112. 130. 148. 166. 184. 202.  -1.  -1.]
 [109.  -1.  -1. 163. 181.  -1.  -1.  -1.]
 [108. 126. 144. 162. 180. 198.  -1.  -1.]
 [105.  -1.  -1. 159. 177.  -1.  -1.  -1.]
 [104. 122. 140. 158. 176. 194.  -1.  -1.]
 [101.  -1.  -1. 155. 173.  -1.  -1.  -1.]
 [100. 118. 136. 154. 172. 190.  -1.  -1.]
 [ -1.  -1.  -1.  -1.  -1.  -1.  -1.  -1.]
 [ -1.  -1.  -1.  -1.  -1.  -1.  -1.  -1.]
 [ -1.  -1.  -1.  -1.  -1.  -1.  -1.  -1.]
 [ -1.  -1.  -1.  -1.  -1.  -1.  -1.  -1.]
 [ -1.  -1.  -1.  -1.  -1.  -1.  -1.  -1.]
 [ -1.  -1.  -1.  -1.  -1.  -1.  -1.  -1.]
 [ -1.  -1.  -1.  -1.  -1.  -1.  -1.  -1.]
 [ -1.  -1.  -1.  -1.  -1.  -1.  -1.  -1.]
 [ -1.  -1.  -1.  -1.  -1.  -1.  -1.  -1.]
 [ -1.  -1.  -1.  -1.  -1.  -1.  -1.  -1.]
 [ -1.  -1.  -1.  -1.  -1.  -1.  -1.  -1.]
 [ -1.  -1.  -1.  -1.  -1.  -1.  -1.  -1.]
 [ -1.  -1.  -1.  -1.  -1.  -1.  -1.  -1.]
 [ -1.  -1.  -1.  -1.  -1.  -1.  -1.  -1.]
 [ -1.  -1.  -1.  -1.  -1.  -1.  -1.  -1.]
 [ -1.  -1.  -1.  -1.  -1.  -1.  -1.  -1.]
 [ -1.  -1.  -1.  -1.  -1.  -1.  -1.  -1.]
 [ -1.  -1.  -1.  -1.  -1.  -1.  -1.  -1.]
 [ -1.  -1.  -1.  -1.  -1.  -1.  -1.  -1.]
 [ -1.  -1.  -1.  -1.  -1.  -1.  -1.  -1.]
 [ -1.  -1.  -1.  -1.  -1.  -1.  -1.  -1.]
 [ -1.  -1.  -1.  -1.  -1.  -1.  -1.  -1.]
 [ -1.  -1.  -1.  -1.  -1.  -1.  -1.  -1.]
 [ -1.  -1.  -1.  -1.  -1.  -1.  -1.  -1.]
 [ -1.  -1.  -1.  -1.  -1.  -1.  -1.  -1.]
 [ -1.  -1.  -1.  -1.  -1.  -1.  -1.  -1.]
 [ -1.  -1.  -1.  -1.  -1.  -1.  -1.  -1.]
 [ -1.  -1.  -1.  -1.  -1.  -1.  -1.  -1.]
 [ -1.  -1.  -1.  -1.  -1.  -1.  -1.  -1.]
 [117.  -1.  -1. 171. 189.  -1.  -1.  -1.]
 [116. 134. 152. 170. 188. 206.  -1.  -1.]
 [ -1.  -1.  -1.  -1.  -1.  -1.  -1.  -1.]
 [ -1.  -1.  -1.  -1.  -1.  -1.  -1.  -1.]
 [ -1.  -1.  -1.  -1.  -1.  -1.  -1.  -1.]
 [ -1.  -1.  -1.  -1.  -1.  -1.  -1.  -1.]
 [ -1.  -1.  -1.  -1.  -1.  -1.  -1.  -1.]
 [ -1.  -1.  -1.  -1.  -1.  -1.  -1.  -1.]
 [ -1.  -1.  -1.  -1.  -1.  -1.  -1.  -1.]
 [ -1.  -1.  -1.  -1.  -1.  -1.  -1.  -1.]
 [ -1.  -1.  -1.  -1.  -1.  -1.  -1.  -1.]
 [ -1.  -1.  -1.  -1.  -1.  -1.  -1.  -1.]
 [ -1.  -1.  -1.  -1.  -1.  -1.  -1.  -1.]
 [ -1.  -1.  -1.  -1.  -1.  -1.  -1.  -1.]
 [ -1.  -1.  -1.  -1.  -1.  -1.  -1.  -1.]
 [ -1.  -1.  -1.  -1.  -1.  -1.  -1.  -1.]
 [ -1.  -1.  -1.  -1.  -1.  -1.  -1.  -1.]
 [ -1.  -1.  -1.  -1.  -1.  -1.  -1.  -1.]
 [ -1.  -1.  -1.  -1.  -1.  -1.  -1.  -1.]
 [ -1.  -1.  -1.  -1.  -1.  -1.  -1.  -1.]
 [ -1.  -1.  -1.  -1.  -1.  -1.  -1.  -1.]
 [ -1.  -1.  -1.  -1.  -1.  -1.  -1.  -1.]
 [ -1.  -1.  -1.  -1.  -1.  -1.  -1.  -1.]
 [ -1.  -1.  -1.  -1.  -1.  -1.  -1.  -1.]
 [ -1.  -1.  -1.  -1.  -1.  -1.  -1.  -1.]]
(62, 8)
self.filter_demand_matrix final end
self.row_fold, self.col_fold
3 1
FINAL DEMAND MATRICES
(62, 32)
(62, 8)
(62, 8)
set_fetch_matrix
(5, 50)
[[ 0.  2.  1.  4.  3.  2. 10.  5.  4.  3. 12. 11.  6.  5.  4. 14. 13. 12.
   7.  6.  5. 20. 15. 14. 13.  8.  7. 10. 22. 21. 16. 15. 14.  9. 12. 11.
  24. 23. 22. 17. 16. 15. 14. 13. 12. 25. 24. 23. 18. 17. 20. 15. 14. 13.
  26. 25. 24. 19. 22. 21. 16. 15. 14. 27. 26. 25. 24. 23. 22. 17. 16. 15.
  28. 27. 30. 25. 24. 23. 18. 17. 20. 29. 32. 31. 26. 25. 24. 19. 22. 21.
  34. 33. 32. 27. 26. 25. 24. 23. 22. 35. 34. 33. 28. 27. 30. 25. 24. 23.
  36. 35. 34. 29. 32. 31. 26. 25. 24. 37. 36. 35. 34. 33. 32. 27. 26. 25.
  38. 37. 40. 35. 34. 33. 28. 27. -1. 39. 42. 41. 36. 35. 34. 29. -1. -1.
  44. 43. 42. 37. 36. 35. -1. -1. -1. 45. 44. 43. 38. 37. -1. -1. -1. -1.
  46. 45. 44. 39. -1. -1. -1. -1. -1. 47. 46. 45. -1. -1. -1. -1. -1. -1.
  48. 47. -1. -1. -1. -1. -1. -1. 49. -1. -1. -1. -1. -1. -1. -1. -1. -1.
  -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]]
(1, 216)
set_fetch_matrix
(2, 50)
[[100. 118. 136. 154. 172. 190.  -1.  -1.]
 [101.  -1.  -1. 155. 173.  -1.  -1.  -1.]
 [104. 122. 140. 158. 176. 194.  -1.  -1.]
 [105.  -1.  -1. 159. 177.  -1.  -1.  -1.]
 [108. 126. 144. 162. 180. 198.  -1.  -1.]
 [109.  -1.  -1. 163. 181.  -1.  -1.  -1.]
 [112. 130. 148. 166. 184. 202.  -1.  -1.]
 [113.  -1.  -1. 167. 185.  -1.  -1.  -1.]
 [116. 134. 152. 170. 188. 206.  -1.  -1.]
 [117.  -1.  -1. 171. 189.  -1.  -1.  -1.]
 [ -1.  -1.  -1.  -1.  -1.  -1.  -1.  -1.]
 [ -1.  -1.  -1.  -1.  -1.  -1.  -1.  -1.]]
(12, 8)
ofmap_lines
62
ifmap_demand_line
[[-1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.
  -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]]
prefetch_active_buffer
(5, 50)
(5, 50)
(5, 50)
prefetch_active_buffer
(2, 50)
(2, 50)
(2, 50)
ifmap_demand_line
[[-1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.
  -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]]
ifmap_demand_line
[[-1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.
  -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]]
ifmap_demand_line
[[-1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.
  -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]]
ifmap_demand_line
[[-1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.
  -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]]
ifmap_demand_line
[[-1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.
  -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]]
ifmap_demand_line
[[-1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.
  -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]]
ifmap_demand_line
[[-1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.
  -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]]
ifmap_demand_line
[[ 0.  1.  2.  3. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.
  -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]]
ifmap_demand_line
[[ 2.  3.  4.  5.  0.  1.  2.  3. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.
  -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]]
ifmap_demand_line
[[ 4.  5.  6.  7.  2.  3.  4.  5.  4.  5. 10. 11. -1. -1. -1. -1. -1. -1.
  -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]]
ifmap_demand_line
[[10. 11. 12. 13.  4.  5.  6.  7.  6.  7. 12. 13.  4.  5. 10. 11. -1. -1.
  -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]]
ifmap_demand_line
[[12. 13. 14. 15. 10. 11. 12. 13.  8.  9. 14. 15.  6.  7. 12. 13. 12. 13.
  14. 15. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]]
ifmap_demand_line
[[14. 15. 16. 17. 12. 13. 14. 15. 14. 15. 20. 21.  8.  9. 14. 15. 14. 15.
  16. 17. 12. 13. 14. 15. -1. -1. -1. -1. -1. -1. -1. -1.]]
ifmap_demand_line
[[20. 21. 22. 23. 14. 15. 16. 17. 16. 17. 22. 23. 14. 15. 20. 21. 16. 17.
  18. 19. 14. 15. 16. 17. 20. 21. 22. 23. -1. -1. -1. -1.]]
ifmap_demand_line
[[22. 23. 24. 25. 20. 21. 22. 23. 18. 19. 24. 25. 16. 17. 22. 23. 22. 23.
  24. 25. 16. 17. 18. 19. 22. 23. 24. 25. 20. 21. 22. 23.]]
ifmap_demand_line
[[24. 25. 26. 27. 22. 23. 24. 25. 24. 25. 30. 31. 18. 19. 24. 25. 24. 25.
  26. 27. 22. 23. 24. 25. 24. 25. 26. 27. 22. 23. 24. 25.]]
ifmap_demand_line
[[-1. -1. -1. -1. 24. 25. 26. 27. 26. 27. 32. 33. 24. 25. 30. 31. 26. 27.
  28. 29. 24. 25. 26. 27. 30. 31. 32. 33. 24. 25. 26. 27.]]
ifmap_demand_line
[[-1. -1. -1. -1. -1. -1. -1. -1. 28. 29. 34. 35. 26. 27. 32. 33. 32. 33.
  34. 35. 26. 27. 28. 29. 32. 33. 34. 35. 30. 31. 32. 33.]]
ifmap_demand_line
[[-1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. 28. 29. 34. 35. 34. 35.
  36. 37. 32. 33. 34. 35. 34. 35. 36. 37. 32. 33. 34. 35.]]
ifmap_demand_line
[[-1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. 36. 37.
  38. 39. 34. 35. 36. 37. 40. 41. 42. 43. 34. 35. 36. 37.]]
ifmap_demand_line
[[-1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.
  -1. -1. 36. 37. 38. 39. 42. 43. 44. 45. 40. 41. 42. 43.]]
ifmap_demand_line
[[-1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.
  -1. -1. -1. -1. -1. -1. 44. 45. 46. 47. 42. 43. 44. 45.]]
ifmap_demand_line
[[-1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.
  -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. 44. 45. 46. 47.]]
ifmap_demand_line
[[-1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.
  -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]]
ifmap_demand_line
[[-1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.
  -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]]
ifmap_demand_line
[[-1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.
  -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]]
ifmap_demand_line
[[-1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.
  -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]]
ifmap_demand_line
[[-1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.
  -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]]
ifmap_demand_line
[[-1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.
  -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]]
ifmap_demand_line
[[-1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.
  -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]]
ifmap_demand_line
[[-1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.
  -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]]
ifmap_demand_line
[[-1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.
  -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]]
ifmap_demand_line
[[-1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.
  -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]]
ifmap_demand_line
[[-1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.
  -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]]
ifmap_demand_line
[[-1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.
  -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]]
ifmap_demand_line
[[-1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.
  -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]]
ifmap_demand_line
[[-1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.
  -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]]
ifmap_demand_line
[[-1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.
  -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]]
ifmap_demand_line
[[24. 25. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.
  -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]]
ifmap_demand_line
[[26. 27. -1. -1. 24. 25. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.
  -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]]
ifmap_demand_line
[[28. 29. -1. -1. 26. 27. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.
  -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]]
ifmap_demand_line
[[34. 35. -1. -1. 28. 29. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.
  -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]]
ifmap_demand_line
[[36. 37. -1. -1. 34. 35. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.
  -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]]
ifmap_demand_line
[[38. 39. -1. -1. 36. 37. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.
  -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]]
ifmap_demand_line
[[44. 45. -1. -1. 38. 39. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.
  -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]]
ifmap_demand_line
[[46. 47. -1. -1. 44. 45. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.
  -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]]
ifmap_demand_line
[[48. 49. -1. -1. 46. 47. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.
  -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]]
ifmap_demand_line
[[-1. -1. -1. -1. 48. 49. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.
  -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]]
ifmap_demand_line
[[-1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.
  -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]]
ifmap_demand_line
[[-1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.
  -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]]
ifmap_demand_line
[[-1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.
  -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]]
ifmap_demand_line
[[-1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.
  -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]]
ifmap_demand_line
[[-1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.
  -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]]
ifmap_demand_line
[[-1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.
  -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]]
ifmap_demand_line
[[-1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.
  -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]]
ifmap_demand_line
[[-1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.
  -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]]
ifmap_demand_line
[[-1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.
  -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]]
ifmap_demand_line
[[-1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.
  -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]]
ifmap_demand_line
[[-1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.
  -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]]
ifmap_demand_line
[[-1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.
  -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]]
ifmap_demand_line
[[-1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.
  -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]]
Compute cycles: 61
Stall cycles: 0
Overall utilization: 24.90%
Mapping efficiency: 35.16%
Average IFMAP SRAM BW: 33.574 words/cycle
Average Filter SRAM BW: 1.180 words/cycle
Average Filter Metadata SRAM BW: 0.074 words/cycle
Average OFMAP SRAM BW: 1.770 words/cycle
Average IFMAP DRAM BW: 50.000 words/cycle
Average Filter DRAM BW: 50.000 words/cycle
Average OFMAP DRAM BW: 36.000 words/cycle
************ SCALE SIM Run Complete ****************
